# -*- coding: utf-8 -*-
"""programming_dhcss_exercise_w3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XJvHCpqgEebIgjYt7Dpxnwt4gEeUcm9a

Programming for DHCSS Exercises: Week 3. Strings, Lists, Tuples, and More
"""

### Problem 1 ###

### Slice the first list to get the second

first_list = [1, 2, 3, 4, 5, 6, 7, 8, 9]

second_list = [1, 4, 7]

### Write your code here

### Problem 2 ###

### Given the follwoing list of numbers, write a program that turns every item in the list into its square

numbers = [1, 2, 3, 4, 5, 6, 7]

### Write your program that uses for loop

### Write your program that uses list comprehension

### Problem 3 ###

### First, use list comprehension to add the two lists index-wise

### Hint: you can use zip() to bind the two lists

list_1 = ['Causa', 'i', 'differ', 'fr', 'correlat']
list_2 = ['tion', 's', 'ent', 'om', 'ion']

### The follwoing is the expected output

['Causation', 'is', 'different', 'from', 'correlation']

### Then, concatenate the elements in the output

['Causation is different from correlation']

### Write your code here

### Problem 4 ###

### Write a program to add two integer items, 7000 and 8000, after 6000 in the following list

nested_list = [True, 10, 20, [300, 400, [5000, 6000], 500], 30, None]

### The following is the expected output

[True, 10, 20, [300, 400, [5000, 6000, 7000, 8000], 500], 30, None]

### Hint: nested_list[3][2] = [5000, 6000]

### Write your code here

### Problem 5a-c ###

### You will do some quick analysis on tweets data

### First get text data from an URL

import requests
url = 'https://raw.githubusercontent.com/harshilkamdar/trump-tweets/master/trump.txt'

response = requests.get(url) # Fetch the text file content
text_data = response.text # Decode the content
tweets = text_data.split('\n') # Split the content by lines

### Examine the data

print(type(tweets))
print(tweets[0])
print(len(tweets))

### Exercise 5a: use list comprehension to create a list to record whether tweets are a retweet or not (i.e. whether it starts with "RT" or not),
### and count the number of retweets

### Write your code here


### Exercise 5b: use list comprehension to create a list to record whether tweets contain an URL or not,
### and count the number of tweets with at least one URL

### Write your code here


### Exercise 5c: create a list to record the number of occurrences for "trump"

### Write your code here

### Problem 6a-b ###

### Create a list of YT comments

youtube_comments = [
    "Awesome video, thanks for sharing! @channel",
    "I really learned a lot from this, @channel!",
    "@user1 @user2 have you guys seen this?",
    "Terrible content. Unsubscribed.",
    "Pls make more content like this! @channel",
    "I totally agree with @user3.",
    "Your videos are always so insightful, @channel.",
    "Could you talk about XYZ in the next video?",
    "I've been following you since 100 subs, @channel.",
    "@user3 I think you're mistaken."
]

### Exercise 6a: filter positive comments: create a new list containing only the comments that include the words "awesome", "thanks", or "learned". Use list comprehension.
### Hint: you can use "any()" function as we have three keywords: https://www.w3schools.com/python/ref_func_any.asp

### Write your code here


### Exercise 6b: count the total number of mentions (e.g., @username) across all comments.

### Write your code here

### Problem 7 ###

### Write a program that produces a matrix like the following:

matrix = [[0, 1, 2, 3, 4],
          [0, 1, 2, 3, 4],
          [0, 1, 2, 3, 4],
          [0, 1, 2, 3, 4],
          [0, 1, 2, 3, 4]]

### Write your code here